package {serviceImplPkgName};

import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import {servicePkgName}.{serviceName};
import {mapperPackageName}.{mapperName};
import {beanPackageName}.{beanName};
import com.xiaoshu.backendframework.util.ObjectUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
public class {serviceImplName} implements {serviceName} {

    private static final Logger log = LoggerFactory.getLogger("adminLogger");

    @Autowired
    private {mapperName} {mapperParamName};

    @Override
    @Transactional
    public {beanName} save{beanName}({beanName} {beanParamName}) {

        {mapperParamName}.insertSelective({beanParamName});

        log.debug("新增{beanName}", {beanParamName}.getId());
        return {beanParamName};
    }

    public {beanName} getById(Long id) {
        return {mapperParamName}.selectByPrimaryKey(id);
    }

    @Override
    @Transactional
    public {beanName} update{beanName}({beanName} {beanParamName}) {

        {mapperParamName}.updateByPrimaryKeySelective({beanParamName});

        log.debug("修改{beanName}", {beanParamName}.getId());
        return {beanParamName};
    }

     @Override
    public Integer selectConditionCount(Map<String, Object> params) {
        {beanName} {beanParamName} = ({beanName})ObjectUtils.mapToObject(params, {beanName}.class);
        return {mapperParamName}.selectConditionCount({beanParamName});
    }

    @Override
    public List<{beanName}> selectConditionList(Map<String, Object> params) {
       {beanName} {beanParamName} = ({beanName})ObjectUtils.mapToObject(params, {beanName}.class);
       return {mapperParamName}.selectConditionList({beanParamName});
    }

    @Override
    public void delete(Long id) {
        {mapperParamName}.deleteByPrimaryKey(id);
        log.debug("删除{beanName}", id);
    }

}
