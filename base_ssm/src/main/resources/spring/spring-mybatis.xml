<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置整合mybatis过程 -->
    <!-- 1.配置数据库相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 2.数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url,sysUser,pass -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 配置初始化大小,最小增长,最大活动连接 -->
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <!-- 获取连接超时时间,单位毫秒 -->
        <property name="maxWait" value="60000"/>

        <!-- 设置间隔多久进行一次检查关闭空闲链接,单位毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>

        <!-- 设置每个连接在池中的最小生存时间,单位毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="30000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。 -->
        <!-- <property name="poolPreparedStatements" value="false" /> -->
        <!-- <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->

        <!-- 配置监控统计拦截的filters -->
        <!-- <property name="filters" value="wall,stat" /> -->
    </bean>

    <!--&lt;!&ndash; 配置druid监控spring jdbc &ndash;&gt;
    <bean id="druid-stat-interceptor"
          class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
          scope="prototype">
        <property name="patterns">
            <list>
                <value>com.max.code.*.service.*</value>
                <value>com.max.code.*.serviceimpl.*</value>
            </list>
        </property>
    </bean>
    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut"/>
    </aop:config>
-->

    <!-- 3.配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包 使用别名 -->
        <!--当有多个包时，可以用分号隔开value="cn.seckill.entity;cn.seckill.bean"-->
        <property name="typeAliasesPackage" value="com.max.code.**.entity;com.max.code.sys.common.entity"/>
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <!--参照写法：<property name="mapperLocations" value="classpath*:com/helping/wechat/model/**/mysql/*Mapper.xml" />-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!---->
    </bean>

    <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         &lt;!&ndash; 注入sqlSessionFactory &ndash;&gt;
         <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
         &lt;!&ndash; 给出需要扫描Dao接口包 &ndash;&gt;
         <property name="basePackage" value="com.max.code.**.dao"/>
     </bean>-->

    <!-- 5. Spring:配置扫描容器，不扫描Controller和ControllerAdvice注解 -->
    <context:component-scan base-package="com.max.code">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--6. 在Spring中配置通用Mapper，注释掉第4点 -->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 为映射器接口文件设置基本的包路径 -->
        <property name="basePackage" value="com.max.code.sys.dao"/>
        <!--
        GenericMapper类是自定义的mapper类.
        notEmpty=true：insert和update中，会判断字符串类型 != ‘’。
        -->
        <property name="properties">
            <value>
                mappers=com.max.code.sys.common.dao.IBaseMapper
                notEmpty=true
            </value>
        </property>

    </bean>


</beans>